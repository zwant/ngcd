[
    {
        "push.identifier.short_name": "test-repo",
        "push.identifier.full_name": "test-org/test-repo",
        "push.identifier.repo_type": "PUBLIC_GITHUB",
        "push.head":"23456",
        "push.previousHead": "12345",
        "push.timestamp":"2017-02-03T14:25:43.511Z",
        "push.userName":"svante",
        "push.userEmail":"svante@example.com",
        "push.commit1.timestamp":"2017-02-02T14:15:43.511Z",
        "push.commit1.sha": "12345",
        "push.commit1.message": "Test commit 1",
        "push.commit2.timestamp":"2017-02-02T14:19:43.511Z",
        "push.commit2.sha": "23456",
        "push.commit2.message": "Test commit 2",
        "repoAdded.timestamp": "2017-02-03T14:19:43.511Z",
        "repoAdded.identifier.short_name": "test-repo",
        "repoAdded.identifier.full_name": "test-org/test-repo",
        "repoAdded.identifier.repo_type": "PUBLIC_GITHUB",
        "repoAdded.description": "A test repo!",
        "repoAdded.html_url": "http://someurl.example.com",
        "repoAdded.api_url": "http://apiurl.example.com",
        "repoAdded.performed_by.userName":"svante",
        "repoAdded.performed_by.id":"1",
        "repoAdded.performed_by.email":"test-email@example.com",
        "stage.name": "stage1",
        "stage.result": "SUCCESS",
        "stage.duration": 10000,
        "stage.startTimestamp": "2017-02-02T15:01:43.511Z",
        "stage.finishTimestamp": "2017-02-02T15:02:43.511Z",
        "pipeline.name": "svante",
        "pipeline.result": "SUCCESS",
        "pipeline.duration": 10000,
        "pipeline.startTimestamp": "2017-02-02T15:00:43.511Z",
        "pipeline.finishTimestamp": "2017-02-02T15:03:43.511Z",
        "pull_request.open.timestamp": "2017-02-03T14:21:31.511Z",
        "pull_request.open.opened_by.userName": "svante",
        "pull_request.open.opened_by.id": "1",
        "pull_request.open.opened_by.email": "svante@example.com",
        "pull_request.open.id": "1",
        "pull_request.pr_repo.identifier.short_name": "test-repo",
        "pull_request.pr_repo.identifier.full_name": "test-org/test-repo",
        "pull_request.pr_repo.identifier.repo_type": "PUBLIC_GITHUB",
        "pull_request.head_sha": "23456",
        "pull_request.base_sha": "12345",
        "pull_request.html_url": "http://something.example.com",
        "pull_request.api_url": "http://something.example.com",
        "pull_request.base_repo.identifier.short_name": "test-repo",
        "pull_request.base_repo.identifier.full_name": "test-org/test-repo",
        "pull_request.base_repo.identifier.repo_type": "PUBLIC_GITHUB",
        "code_review.close.timestamp": "2017-02-03T14:23:31.511Z",
        "code_review.close.pr_id": "1",
        "code_review.close.pr_repo.identifier.short_name": "test-repo",
        "code_review.close.pr_repo.identifier.full_name": "test-org/test-repo",
        "code_review.close.pr_repo.identifier.repo_type": "PUBLIC_GITHUB",
        "code_review.close.completed_by.userName": "someone",
        "code_review.close.completed_by.id": "2",
        "code_review.close.completed_by.email": "someone@example.com",
        "code_review.close.result": "ACCEPTED"
    },
    {
        "push.identifier.short_name": "other-repo",
        "push.identifier.full_name": "other-org/other-repo",
        "push.identifier.repo_type": "PUBLIC_GITHUB",
        "push.head":"23456",
        "push.previousHead": "12345",
        "push.timestamp":"2017-02-04T12:00:43.511Z",
        "push.userName":"svante",
        "push.userEmail":"svante@example.com",
        "push.commit1.timestamp":"2017-02-03T12:01:43.511Z",
        "push.commit1.sha": "12345",
        "push.commit1.message": "Test commit 1",
        "push.commit2.timestamp":"2017-02-03T12:02:43.511Z",
        "push.commit2.sha": "23456",
        "push.commit2.message": "Test commit 2",
        "repoAdded.timestamp": "2017-02-03T14:19:43.511Z",
        "repoAdded.identifier.short_name": "other-repo",
        "repoAdded.identifier.full_name": "other-org/other-repo",
        "repoAdded.identifier.repo_type": "PUBLIC_GITHUB",
        "repoAdded.description": "A test repo!",
        "repoAdded.html_url": "http://someurl.example.com",
        "repoAdded.api_url": "http://apiurl.example.com",
        "repoAdded.performed_by.userName":"svante",
        "repoAdded.performed_by.id":"1",
        "repoAdded.performed_by.email":"test-email@example.com",
        "stage.name": "stage1",
        "stage.result": "FAILURE",
        "stage.duration": 1500,
        "stage.startTimestamp": "2017-02-03T14:01:43.511Z",
        "stage.finishTimestamp": "2017-02-03T14:02:43.511Z",
        "pipeline.name": "second",
        "pipeline.result": "FAILURE",
        "pipeline.duration": 130000,
        "pipeline.startTimestamp": "2017-02-03T14:30:43.511Z",
        "pipeline.finishTimestamp": "2017-02-03T14:45:43.511Z",
        "pull_request.open.timestamp": "2017-02-03T14:22:31.511Z",
        "pull_request.open.opened_by.userName": "other",
        "pull_request.open.opened_by.id": "3",
        "pull_request.open.opened_by.email": "other@example.com",
        "pull_request.open.id": "2",
        "pull_request.pr_repo.identifier.short_name": "other-repo",
        "pull_request.pr_repo.identifier.full_name": "other-org/other-repo",
        "pull_request.pr_repo.identifier.repo_type": "PUBLIC_GITHUB",
        "pull_request.head_sha": "23456",
        "pull_request.base_sha": "12345",
        "pull_request.html_url": "http://something.example.com",
        "pull_request.api_url": "http://something.example.com",
        "pull_request.base_repo.identifier.short_name": "other-repo",
        "pull_request.base_repo.identifier.full_name": "other-org/other-repo",
        "pull_request.base_repo.identifier.repo_type": "PUBLIC_GITHUB",
        "code_review.close.timestamp": "2017-02-03T14:23:31.511Z",
        "code_review.close.pr_id": "2",
        "code_review.close.pr_repo.identifier.short_name": "other-repo",
        "code_review.close.pr_repo.identifier.full_name": "other-org/other-repo",
        "code_review.close.pr_repo.identifier.repo_type": "PUBLIC_GITHUB",
        "code_review.close.completed_by.userName": "someone",
        "code_review.close.completed_by.id": "2",
        "code_review.close.completed_by.email": "someone@example.com",
        "code_review.close.result": "DENIED"
    }
]
